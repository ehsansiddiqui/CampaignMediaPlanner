@page "/"
@using CampaignMediaPlanner.Services
@inject GoalSeekService GoalSeek

<div class="container">
    <h3>Campaign Media Planner</h3>

    <EditForm Model="@parameters" OnValidSubmit="@Calculate">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Total Campaign Budget:</label>
            <InputNumber @bind-Value="parameters.TotalBudget" />
        </div>
        <div class="form-group">
            <label>Agency Fee Percentage:</label>
            <InputNumber @bind-Value="parameters.AgencyFeePercentage" />
        </div>
        <div class="form-group">
            <label>Third-Party Tool Fee Percentage:</label>
            <InputNumber @bind-Value="parameters.ThirdPartyFeePercentage" />
        </div>
        <div class="form-group">
            <label>Fixed Costs for Agency Hours:</label>
            <InputNumber @bind-Value="parameters.FixedCosts" />
        </div>
        <div class="form-group">
            <label>Ad Spend for Other Ads:</label>
            <InputNumber @bind-Value="parameters.OtherAdSpend" />
        </div>
        <div class="form-group">
            <label>Initial Guess for Ad Budget:</label>
            <InputNumber @bind-Value="parameters.InitialGuess" />
        </div>

        <button type="submit">Calculate</button>
    </EditForm>

    @if (result.HasValue)
    {
        <div class="result">
            <p>Calculated Ad Budget: @result.Value.ToString("F2")</p>
        </div>
    }
</div>

@code {
    private Parameters parameters = new Parameters();
    private double? result;

    private void Calculate()
    {
        try
        {
            result = GoalSeek.GoalSeek(Equation, parameters.TotalBudget, parameters.InitialGuess);
        }
        catch (Exception ex)
        {
            result = null;
            // Handle exception (e.g., display error message)
        }
    }

    private double Equation(double x)
    {
        double totalAdSpend = x + parameters.OtherAdSpend;
        return totalAdSpend + parameters.AgencyFeePercentage * totalAdSpend + 
               parameters.ThirdPartyFeePercentage * totalAdSpend + 
               parameters.FixedCosts;
    }

    private class Parameters
    {
        public double TotalBudget { get; set; }
        public double AgencyFeePercentage { get; set; }
        public double ThirdPartyFeePercentage { get; set; }
        public double FixedCosts { get; set; }
        public double OtherAdSpend { get; set; }
        public double InitialGuess { get; set; }
    }
}